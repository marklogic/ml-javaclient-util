plugins {
	id "java-library"
	id "maven-publish"
	id "signing"
	id "com.github.jk1.dependency-license-report" version "2.1"
	id "io.snyk.gradle.plugin.snykplugin" version "0.4"
}

group = "com.marklogic"
version = "4.3.2"

sourceCompatibility = "8"
targetCompatibility = "8"

repositories {
	mavenCentral()
}

dependencies {
  api 'com.marklogic:marklogic-client-api:5.5.3'
  api 'com.marklogic:marklogic-xcc:10.0.9'
  api 'org.springframework:spring-context:5.3.18'

  implementation 'org.jdom:jdom2:2.0.6.1'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.6.1'

	// This is currently an implementation dependency, though perhaps should be an api dependency due to its usage in
	// LoggingObject; not clear yet on whether the protected Logger in that class should make this an api dependency or not
	implementation 'org.slf4j:slf4j-api:1.7.36'

  testImplementation "org.junit.jupiter:junit-jupiter:5.7.2"
	testImplementation 'org.springframework:spring-test:5.3.18'
	testImplementation 'org.mockito:mockito-core:2.1.0'

  // Used for testing loading modules from the classpath
  testImplementation files("lib/modules.jar")

	// Forcing Spring to use logback instead of commons-logging
	testImplementation "ch.qos.logback:logback-classic:1.2.11"
	testImplementation "org.slf4j:jcl-over-slf4j:1.7.36"
	testImplementation "org.slf4j:slf4j-api:1.7.36"
}

test {
	useJUnitPlatform()
  testLogging {
    events 'started','passed', 'skipped', 'failed'
    exceptionFormat 'full'
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier "javadoc"
	from javadoc
}
javadoc.failOnError = false
// Ignores warnings on params that don't have descriptions, which is a little too noisy
javadoc.options.addStringOption('Xdoclint:none', '-quiet')

artifacts {
	archives javadocJar, sourcesJar
}
signing {
	sign configurations.archives
}

task generatePomForDependencyGraph(dependsOn: "generatePomFileForMainJavaPublication") {
	description = "Prepare for a release by making a copy of the generated pom file in the root directory so that it " +
		"can enable Github's Dependency Graph feature, which does not yet support Gradle"
	doLast {
		def preamble = '<?xml version="1.0" encoding="UTF-8"?>'
		def comment = "<!--\n" +
			"This file was generated via Gradle and is being used primarily for github's Dependency Graph feature.\n" +
			"It is not intended to be used to build this project.\n" +
			"-->"
		def fileText = file("build/publications/mainJava/pom-default.xml").getText()
		file("pom.xml").setText(fileText.replace(preamble, preamble + comment))
	}
}

publishing {
  publications {
    mainJava(MavenPublication) {
			pom {
				name = "${group}:${project.name}"
				description = "Library that adds functionality on top of the MarkLogic Java Client"
				packaging = "jar"
				url = "https://github.com/marklogic-community/${project.name}"
				licenses {
					license {
						name = "The Apache License, Version 2.0"
						url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
					}
				}
				developers {
					developer {
						id = "marklogic"
						name = "MarkLogic Github Contributors"
						email = "general@developer.marklogic.com"
						organization = "MarkLogic"
						organizationUrl = "https://www.marklogic.com"
					}
				}
				scm {
					url = "git@github.com:marklogic-community/${project.name}.git"
					connection = "scm:git@github.com:marklogic-community/${project.name}.git"
					developerConnection = "scm:git@github.com:marklogic-community/${project.name}.git"
				}
			}
      from components.java
      artifact sourcesJar
		  artifact javadocJar
	  }
  }
	repositories {
		maven {
			name = "central"
			url = mavenCentralUrl
			credentials {
				username mavenCentralUsername
				password mavenCentralPassword
			}
		}
	}
}

// See https://github.com/snyk/gradle-plugin for more information
snyk {
	//arguments = '--all-sub-projects'
	severity = 'low'
	api = snykToken
	autoDownload = true
	autoUpdate = true
}
